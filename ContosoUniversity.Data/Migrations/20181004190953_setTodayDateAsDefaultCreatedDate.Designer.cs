// <auto-generated />
using System;
using ContosoUniversity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContosoUniversity.Data.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20181004190953_setTodayDateAsDefaultCreatedDate")]
    partial class setTodayDateAsDefaultCreatedDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContosoUniversity.Data.EntityModels.CourseEntity", b =>
                {
                    b.Property<int>("CourseId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Credits");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("CourseId");

                    b.ToTable("Course");

                    b.HasData(
                        new { CourseId = 1050, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), Credits = 3, Title = "Chemistry" },
                        new { CourseId = 4022, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), Credits = 3, Title = "Microeconomics" },
                        new { CourseId = 4041, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), Credits = 3, Title = "Macroeconomics" },
                        new { CourseId = 1045, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), Credits = 4, Title = "Calculus" },
                        new { CourseId = 3141, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), Credits = 4, Title = "Trigonometry" },
                        new { CourseId = 2021, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), Credits = 3, Title = "Composition" },
                        new { CourseId = 2042, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), Credits = 4, Title = "Literature" }
                    );
                });

            modelBuilder.Entity("ContosoUniversity.Data.EntityModels.EnrollmentEntity", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<int?>("Grade");

                    b.Property<int>("StudentId");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollment");

                    b.HasData(
                        new { EnrollmentId = 1, CourseId = 1050, Grade = 0, StudentId = 1 },
                        new { EnrollmentId = 2, CourseId = 4022, Grade = 2, StudentId = 1 },
                        new { EnrollmentId = 3, CourseId = 4041, Grade = 1, StudentId = 1 },
                        new { EnrollmentId = 4, CourseId = 1045, Grade = 1, StudentId = 2 },
                        new { EnrollmentId = 5, CourseId = 3141, Grade = 5, StudentId = 2 },
                        new { EnrollmentId = 6, CourseId = 2021, Grade = 5, StudentId = 2 },
                        new { EnrollmentId = 7, CourseId = 1050, StudentId = 3 },
                        new { EnrollmentId = 8, CourseId = 1050, StudentId = 4 },
                        new { EnrollmentId = 9, CourseId = 4022, Grade = 5, StudentId = 4 },
                        new { EnrollmentId = 10, CourseId = 4041, Grade = 2, StudentId = 5 },
                        new { EnrollmentId = 11, CourseId = 1045, StudentId = 6 },
                        new { EnrollmentId = 12, CourseId = 3141, Grade = 0, StudentId = 7 }
                    );
                });

            modelBuilder.Entity("ContosoUniversity.Data.EntityModels.StudentEntity", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("EnrollmentDate");

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("OriginCountry")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("StudentId");

                    b.ToTable("Student");

                    b.HasData(
                        new { StudentId = 1, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 487, DateTimeKind.Local), EnrollmentDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstMidName = "Carson", LastName = "Alexander", OriginCountry = "USA" },
                        new { StudentId = 2, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), EnrollmentDate = new DateTime(2002, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstMidName = "Meredith", LastName = "Alonso", OriginCountry = "CHINA" },
                        new { StudentId = 3, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), EnrollmentDate = new DateTime(2003, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstMidName = "Arturo", LastName = "Anand", OriginCountry = "USA" },
                        new { StudentId = 4, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), EnrollmentDate = new DateTime(2002, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstMidName = "Gytis", LastName = "Barzdukas", OriginCountry = "JAPAN" },
                        new { StudentId = 5, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), EnrollmentDate = new DateTime(2002, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstMidName = "Yan", LastName = "Li", OriginCountry = "USA" },
                        new { StudentId = 6, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), EnrollmentDate = new DateTime(2001, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstMidName = "Peggy", LastName = "Justice", OriginCountry = "ENGLAND" },
                        new { StudentId = 7, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), EnrollmentDate = new DateTime(2003, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstMidName = "Laura", LastName = "Norman", OriginCountry = "FRANCE" },
                        new { StudentId = 8, CreatedBy = "ContosoUniversityUsers", CreatedDate = new DateTime(2018, 10, 4, 15, 9, 53, 490, DateTimeKind.Local), EnrollmentDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), FirstMidName = "Nino", LastName = "Olivetto", OriginCountry = "GERMANY" }
                    );
                });

            modelBuilder.Entity("ContosoUniversity.Data.EntityModels.EnrollmentEntity", b =>
                {
                    b.HasOne("ContosoUniversity.Data.EntityModels.CourseEntity", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ContosoUniversity.Data.EntityModels.StudentEntity", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
